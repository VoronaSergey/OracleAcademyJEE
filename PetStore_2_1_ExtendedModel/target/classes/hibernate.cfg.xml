<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.
  ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <!-- Database connection settings -->
        <!-- <property name="connection.driver_class">org.hsqldb.jdbcDriver</property>
                    <property name="connection.url">jdbc:hsqldb:hsql://localhost/TestDB</property> -->

        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost/zooshop</property>
        <property name="connection.username">root</property>
        <property name="connection.password">toor</property>

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>

        <!-- SQL dialect -->
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>

        <!-- Enable Hibernate's automatic session context management 
        <property name="current_session_context_class">thread</property>

        <property name="cache.use_query_cache">true</property>
        <property name="cache.use_second_level_cache">true</property>
        <property name="cache.use_structured_entries">true</property>
        <property name="cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</property>
        <property name="net.sf.ehcache.configurationResourceName">/hibernate-config/ehcache.xml</property> -->
      
        <!-- Echo all executed SQL to stdout  -->
        <property name="show_sql">true</property>
        
		<!-- If you don't want to use Strings in your app and are looking for predefined constants have a 
		look at org.hibernate.cfg.AvailableSettings class included in the Hibernate JAR, where you'll 
		find a constant for all possible settings. In your case for example: Auto export/update schema using hbm2ddl tool. 
		Valid values are <tt>update</tt>, <tt>create</tt>, <tt>create-drop</tt> and <tt>validate</tt>. -->	
        <!-- Drop and re-create the database schema on startup -->
		<property name="hbm2ddl.auto">update</property>
		
		<!-- Names the annotated entity class -->
		<mapping class="ua.vorona.db.model.Item"/>
		<mapping class="ua.vorona.db.model.Type"/>  
		<mapping class="ua.vorona.db.model.accessory.Accessory"/>  
		<mapping class="ua.vorona.db.model.accessory.AccessoryType"/>    
		<mapping class="ua.vorona.db.model.feed.Feed"/>  
		<mapping class="ua.vorona.db.model.feed.FeedType"/>    
		<mapping class="ua.vorona.db.model.animal.Animal"/>  
		<mapping class="ua.vorona.db.model.animal.AnimalType"/>  
		 
		<mapping class="ua.vorona.db.model.animal.bird.Bird"/>  
		<mapping class="ua.vorona.db.model.animal.bird.BirdSpecies"/>  
		<mapping class="ua.vorona.db.model.bird.BirdType"/>  
		
		<mapping class="ua.vorona.db.model.animal.fish.Fish"/>   
		<mapping class="ua.vorona.db.model.animal.fish.FishSpecies"/>   
		<mapping class="ua.vorona.db.model.animal.fish.FishType"/>   
		
		<mapping class="ua.vorona.db.model.animal.mammal.Mammal"/>   
		<mapping class="ua.vorona.db.model.animal.mammal.MammalType"/>   
		<mapping class="ua.vorona.db.model.animal.mammal.MammalSpecies"/>   
		
    <!-- <mapping resource="hibernate-config/domain/Event.hbm.xml"/>
        <mapping resource="hibernate-config/domain/Person.hbm.xml"/>
        <mapping resource="hibernate-config/domain/PhoneNumber.hbm.xml"/>
        <mapping resource="hibernate-config/domain/Account.hbm.xml"/>
        <mapping resource="hibernate-config/domain/HolidayCalendar.hbm.xml"/>

        <mapping resource="hibernate-config/domain/Item.hbm.xml"/> -->

    </session-factory>

</hibernate-configuration>
